b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       7  |   3     8  |   2     8  |   2     8  |   2  \n    2       MM_Open      8  |   2     8  |   2     6  |   4     6  |   4  \n    3      MM_Center    10  |   0     8  |   2     7  |   3     8  |   2  \n    4     MM_Improved    7  |   3     4  |   6     5  |   5     6  |   4  \n    5       AB_Open      5  |   5     3  |   7     2  |   8     6  |   4  \n    6      AB_Center     6  |   4     6  |   4     7  |   3     5  |   5  \n    7     AB_Improved    4  |   6     6  |   4     3  |   7     3  |   7  \n--------------------------------------------------------------------------\n           Win Rate:      67.1%        61.4%        54.3%        60.0%    \n\nYour agents forfeited 166.0 games while there were still legal moves available to play.\n\n'
b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       9  |   1     9  |   1     9  |   1     9  |   1  \n    2       MM_Open      7  |   3     5  |   5    10  |   0     8  |   2  \n    3      MM_Center     7  |   3     6  |   4     9  |   1    10  |   0  \n    4     MM_Improved    6  |   4     6  |   4     8  |   2     6  |   4  \n    5       AB_Open      4  |   6     4  |   6     5  |   5     6  |   4  \n    6      AB_Center     6  |   4     7  |   3     6  |   4     6  |   4  \n    7     AB_Improved    3  |   7     4  |   6     5  |   5     4  |   6  \n--------------------------------------------------------------------------\n           Win Rate:      60.0%        58.6%        74.3%        70.0%    \n\nYour agents forfeited 156.0 games while there were still legal moves available to play.\n\n'
b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       9  |   1     7  |   3     9  |   1     9  |   1  \n    2       MM_Open      7  |   3     7  |   3     9  |   1     7  |   3  \n    3      MM_Center     7  |   3     8  |   2     6  |   4     9  |   1  \n    4     MM_Improved    7  |   3     6  |   4     7  |   3     8  |   2  \n    5       AB_Open      6  |   4     3  |   7     5  |   5     4  |   6  \n    6      AB_Center     6  |   4     5  |   5     6  |   4     6  |   4  \n    7     AB_Improved    5  |   5     3  |   7     4  |   6     6  |   4  \n--------------------------------------------------------------------------\n           Win Rate:      67.1%        55.7%        65.7%        70.0%    \n\nYour agents forfeited 158.0 games while there were still legal moves available to play.\n\n'
b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       6  |   4     8  |   2     8  |   2     7  |   3  \n    2       MM_Open      8  |   2     5  |   5     7  |   3     6  |   4  \n    3      MM_Center     7  |   3     9  |   1     8  |   2     7  |   3  \n    4     MM_Improved    7  |   3     4  |   6     5  |   5     5  |   5  \n    5       AB_Open      4  |   6     4  |   6     5  |   5     5  |   5  \n    6      AB_Center     5  |   5     4  |   6     5  |   5     5  |   5  \n    7     AB_Improved    5  |   5     3  |   7     6  |   4     4  |   6  \n--------------------------------------------------------------------------\n           Win Rate:      60.0%        52.9%        62.9%        55.7%    \n\nThere were 65.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.\n\n\nYour agents forfeited 108.0 games while there were still legal moves available to play.\n\n'
b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       2  |   8     4  |   6     1  |   9     4  |   6  \n    2       MM_Open      0  |  10     2  |   8     3  |   7     3  |   7  \n    3      MM_Center     1  |   9     2  |   8     0  |  10     1  |   9  \n    4     MM_Improved    2  |   8     2  |   8     2  |   8     1  |   9  \n    5       AB_Open      5  |   5     8  |   2     6  |   4     3  |   7  \n    6      AB_Center     7  |   3     5  |   5     5  |   5     6  |   4  \n    7     AB_Improved    4  |   6     5  |   5     9  |   1     3  |   7  \n--------------------------------------------------------------------------\n           Win Rate:      30.0%        40.0%        37.1%        30.0%    \n\nThere were 219.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.\n\n\nYour agents forfeited 31.0 games while there were still legal moves available to play.\n\n'
b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       3  |   7     4  |   6     3  |   7     4  |   6  \n    2       MM_Open      4  |   6     0  |  10     1  |   9     2  |   8  \n    3      MM_Center     3  |   7     3  |   7     5  |   5     1  |   9  \n    4     MM_Improved    2  |   8     2  |   8     2  |   8     1  |   9  \n    5       AB_Open      0  |  10     4  |   6     5  |   5     6  |   4  \n    6      AB_Center     6  |   4     6  |   4     5  |   5     7  |   3  \n    7     AB_Improved    4  |   6     6  |   4     4  |   6     5  |   5  \n--------------------------------------------------------------------------\n           Win Rate:      31.4%        35.7%        35.7%        37.1%    \n\nThere were 207.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.\n\n\nYour agents forfeited 33.0 games while there were still legal moves available to play.\n\n'
b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       3  |   7     3  |   7     2  |   8     4  |   6  \n    2       MM_Open      0  |  10     1  |   9     1  |   9     5  |   5  \n    3      MM_Center     5  |   5     2  |   8     5  |   5     3  |   7  \n    4     MM_Improved    2  |   8     1  |   9     3  |   7     3  |   7  \n    5       AB_Open      3  |   7     7  |   3     7  |   3     5  |   5  \n    6      AB_Center     6  |   4     4  |   6     7  |   3     8  |   2  \n    7     AB_Improved    1  |   9     3  |   7     7  |   3     5  |   5  \n--------------------------------------------------------------------------\n           Win Rate:      28.6%        30.0%        45.7%        47.1%    \n\nThere were 216.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.\n\n\nYour agents forfeited 21.0 games while there were still legal moves available to play.\n\n'
b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       4  |   6     4  |   6     4  |   6     3  |   7  \n    2       MM_Open      0  |  10     1  |   9     3  |   7     0  |  10  \n    3      MM_Center     1  |   9     1  |   9     3  |   7     1  |   9  \n    4     MM_Improved    2  |   8     2  |   8     3  |   7     2  |   8  \n    5       AB_Open      5  |   5     4  |   6     4  |   6     6  |   4  \n    6      AB_Center     6  |   4     4  |   6     7  |   3     7  |   3  \n    7     AB_Improved    7  |   3     7  |   3     4  |   6     5  |   5  \n--------------------------------------------------------------------------\n           Win Rate:      35.7%        32.9%        40.0%        34.3%    \n\nThere were 222.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.\n\n\nYour agents forfeited 24.0 games while there were still legal moves available to play.\n\n'
b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       3  |   7     1  |   9     6  |   4     3  |   7  \n    2       MM_Open      2  |   8     3  |   7     1  |   9     1  |   9  \n    3      MM_Center     3  |   7     3  |   7     2  |   8     1  |   9  \n    4     MM_Improved    1  |   9     1  |   9     3  |   7     3  |   7  \n    5       AB_Open      3  |   7     7  |   3     4  |   6     7  |   3  \n    6      AB_Center     9  |   1     6  |   4     8  |   2     5  |   5  \n    7     AB_Improved    3  |   7     7  |   3     6  |   4     4  |   6  \n--------------------------------------------------------------------------\n           Win Rate:      34.3%        40.0%        42.9%        34.3%    \n\nThere were 221.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.\n\n\nYour agents forfeited 22.0 games while there were still legal moves available to play.\n\n'
b'\nThis script evaluates the performance of the custom_score evaluation\nfunction against a baseline agent using alpha-beta search and iterative\ndeepening (ID) called `AB_Improved`. The three `AB_Custom` agents use\nID and alpha-beta search with the custom_score functions defined in\ngame_agent.py.\n\n                        *************************                         \n                             Playing Matches                              \n                        *************************                         \n\n Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 \n                        Won | Lost   Won | Lost   Won | Lost   Won | Lost \n    1       Random       1  |   9     3  |   7     4  |   6     5  |   5  \n    2       MM_Open      5  |   5     2  |   8     4  |   6     1  |   9  \n    3      MM_Center     0  |  10     5  |   5     5  |   5     1  |   9  \n    4     MM_Improved    1  |   9     0  |  10     1  |   9     1  |   9  \n    5       AB_Open      8  |   2     7  |   3     6  |   4     5  |   5  \n    6      AB_Center     4  |   6     5  |   5     6  |   4     6  |   4  \n    7     AB_Improved    4  |   6     5  |   5     5  |   5     6  |   4  \n--------------------------------------------------------------------------\n           Win Rate:      32.9%        38.6%        44.3%        35.7%    \n\nThere were 150.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.\n\n\nYour agents forfeited 91.0 games while there were still legal moves available to play.\n\n'
